{
	"client/components.json": "Configuration file for UI component library, defining schema, styling options, and resource paths.",
	"client/eslint.config.js": "ESLint configuration file for TypeScript and React, including plugins and custom rules.",
	"client/index.html": "Main HTML entry point with root div for React mounting and main.tsx script.",
	"client/package.json": "Client configuration with dependencies, scripts, and metadata.",
	"client/postcss.config.js": "PostCSS configuration with tailwindcss and autoprefixer plugins.",
	"client/src/api/api.ts": "This file configures an Axios instance request authentication via access tokens, and automatic token refresh on authentication failures.",
	"client/src/api/auth.ts": "API utility functions for user authentication. Exports function login, register and logout.",
	"client/src/App.css": "Main application styles including root layout and animations.",
	"client/src/App.tsx": "Root application component configuring authentication, routing, theming, and rendering core pages with protected routes for professor dashboard and grade management.",
	"client/src/components/Footer.tsx": "Footer component with privacy and terms links.",
	"client/src/components/Header.tsx": "Header component with user greeting, theme toggle, and logout functionality, rendering a fixed top navigation bar for the Academic Management System.",
	"client/src/components/Layout.tsx": "Layout component with header, main content, and footer.",
	"client/src/components/ProtectedRoute.tsx": "Protected route component for authenticated user access control.",
	"client/src/components/ui/accordion.tsx": "Shadcn Accordion component. Exports Accordion, AccordionItem, AccordionButton, and AccordionPanel.",
	"client/src/components/ui/alert-dialog.tsx": "Shadcn Alert Dialog component. Exports   AlertDialog, AlertDialogPortal, AlertDialogOverlay, AlertDialogTrigger, AlertDialogContent, AlertDialogHeader, AlertDialogFooter, AlertDialogTitle, AlertDialogDescription, AlertDialogAction, AlertDialogCancel.",
	"client/src/components/ui/alert.tsx": "Shadcn Alert component. Exports Alert, AlertTitle, AlertDescription.",
	"client/src/components/ui/aspect-ratio.tsx": "Shadcn Aspect Ratio component. Exports AspectRatio.",
	"client/src/components/ui/avatar.tsx": "Shadcn Avatar component. Exports Avatar, AvatarImage, AvatarFallback.",
	"client/src/components/ui/badge.tsx": "Shadcn Badge component. Exports Badge, badgeVariants.",
	"client/src/components/ui/breadcrumb.tsx": "Shadcn Breadcrumb component. Exports Breadcrumb, BreadcrumbItem, BreadcrumbLink, BreadcrumbList, BreadcrumbPage, BreadcrumbSeparator, BreadcrumbEllipsis.",
	"client/src/components/ui/button.tsx": "Shadcn Button component. Exports Button, buttonVariants.",
	"client/src/components/ui/calendar.tsx": "Shadcn Calendar component. Exports Calendar.",
	"client/src/components/ui/card.tsx": "Shadcn Card component. Exports Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent.",
	"client/src/components/ui/carousel.tsx": "Shadcn Carousel component. Exports type CarouselApi, Carousel, CarouselContent, CarouselItem, CarouselPrevious, CarouselNext.",
	"client/src/components/ui/chart.tsx": "Shadcn Chart component. Exports ChartContainer, ChartTooltip, ChartTooltipContent, ChartLegend, ChartLegendContent, ChartStyle.",
	"client/src/components/ui/checkbox.tsx": "Shadcn Checkbox component. Exports Checkbox.",
	"client/src/components/ui/collapsible.tsx": "Shadcn Collapsible component. Exports Collapsible, CollapsibleTrigger, CollapsibleContent.",
	"client/src/components/ui/command.tsx": "Shadcn Command component. Exports Command, CommandDialog, CommandInput, CommandList, CommandEmpty, CommandGroup, CommandItem, CommandShortcut, CommandSeparator.",
	"client/src/components/ui/context-menu.tsx": "Shadcn Context Menu component. Exports ContextMenu, ContextMenuTrigger, ContextMenuContent, ContextMenuItem, ContextMenuCheckboxItem, ContextMenuRadioItem, ContextMenuLabel, ContextMenuSeparator, ContextMenuShortcut, ContextMenuGroup, ContextMenuPortal, ContextMenuSub, ContextMenuSubContent, ContextMenuSubTrigger, ContextMenuRadioGroup.",
	"client/src/components/ui/dialog.tsx": "Shadcn Dialog component. Exports Dialog, DialogPortal, DialogOverlay, DialogClose, DialogTrigger, DialogContent, DialogHeader, DialogFooter, DialogTitle, DialogDescription.",
	"client/src/components/ui/drawer.tsx": "Shadcn Drawer component. Exports Drawer, DrawerPortal, DrawerOverlay, DrawerClose, DrawerTrigger, DrawerContent, DrawerHeader, DrawerFooter, DrawerTitle, DrawerDescription.",
	"client/src/components/ui/dropdown-menu.tsx": "Shadcn Dropdown Menu component. Exports DropdownMenu, DropdownMenuTrigger, DropdownMenuContent, DropdownMenuItem, DropdownMenuCheckboxItem, DropdownMenuRadioItem, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuShortcut, DropdownMenuGroup, DropdownMenuPortal, DropdownMenuSub, DropdownMenuSubContent, DropdownMenuSubTrigger, DropdownMenuRadioGroup.",
	"client/src/components/ui/form.tsx": "Shadcn Form component. Exports useFormField, Form, FormField, FormLabel, FormItem, FormControl, FormDescription, FormMessage.",
	"client/src/components/ui/hover-card.tsx": "Shadcn Hover Card component. Exports HoverCard, HoverCardTrigger, HoverCardContent.",
	"client/src/components/ui/input-otp.tsx": "Shadcn Input OTP component. Exports InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator.",
	"client/src/components/ui/input.tsx": "Shadcn Input component. Exports Input.",
	"client/src/components/ui/label.tsx": "Shadcn Label component. Exports Label.",
	"client/src/components/ui/menubar.tsx": "Shadcn Menubar component. Exports Menubar, MenubarMenu, MenubarTrigger, MenubarContent, MenubarItem, MenubarSeparator, MenubarLabel, MenubarCheckboxItem, MenubarRadioGroup, MenubarRadioItem, MenubarPortal, MenubarSubContent, MenubarSubTrigger, MenubarGroup, MenubarSub, MenubarShortcut.",
	"client/src/components/ui/navigation-menu.tsx": "Shadcn Navigation Menu component. Exports navigationMenuTriggerStyle, NavigationMenu, NavigationMenuList, NavigationMenuItem, NavigationMenuContent, NavigationMenuTrigger, NavigationMenuLink, NavigationMenuIndicator, NavigationMenuViewport.",
	"client/src/components/ui/pagination.tsx": "Shadcn Pagination component. Exports Pagination, PaginationContent, PaginationEllipsis, PaginationItem, PaginationLink, PaginationNext, PaginationPrevious.",
	"client/src/components/ui/popover.tsx": "Shadcn Popover component. Exports Popover, PopoverTrigger, PopoverContent.",
	"client/src/components/ui/progress.tsx": "Shadcn Progress component. Exports Progress.",
	"client/src/components/ui/radio-group.tsx": "Shadcn Radio Group component. Exports RadioGroup, RadioGroupItem.",
	"client/src/components/ui/resizable.tsx": "Shadcn Resizable component. Exports ResizablePanelGroup, ResizablePanel, ResizableHandle.",
	"client/src/components/ui/scroll-area.tsx": "Shadcn Scroll Area component. Exports ScrollArea, ScrollBar.",
	"client/src/components/ui/select.tsx": "Shadcn Select component. Exports Select, SelectGroup, SelectValue, SelectTrigger, SelectContent, SelectLabel, SelectItem, SelectSeparator, SelectScrollUpButton, SelectScrollDownButton.",
	"client/src/components/ui/separator.tsx": "Shadcn Separator component. Exports Separator.",
	"client/src/components/ui/sheet.tsx": "Shadcn Sheet component. Exports Sheet, SheetPortal, SheetOverlay, SheetClose, SheetTrigger, SheetContent, SheetHeader, SheetFooter, SheetTitle, SheetDescription.",
	"client/src/components/ui/sidebar.tsx": "Shadcn Sidebar component. Exports Sidebar, SidebarContent, SidebarFooter, SidebarGroup, SidebarGroupAction, SidebarGroupContent, SidebarGroupLabel, SidebarHeader, SidebarInput, SidebarInset, SidebarMenu, SidebarMenuAction, SidebarMenuBadge, SidebarMenuButton, SidebarMenuItem, SidebarMenuSkeleton, SidebarMenuSub, SidebarMenuSubButton, SidebarMenuSubItem, SidebarProvider, SidebarRail, SidebarSeparator, SidebarTrigger, useSidebar.",
	"client/src/components/ui/skeleton.tsx": "Shadcn Skeleton component. Exports Skeleton.",
	"client/src/components/ui/slider.tsx": "Shadcn Slider component. Exports Slider.",
	"client/src/components/ui/sonner.tsx": "Shadcn Sonner component. Exports Toaster.",
	"client/src/components/ui/switch.tsx": "Shadcn Switch component. Exports Switch.",
	"client/src/components/ui/table.tsx": "Shadcn Table component. Exports Table, TableBody, TableCell, TableFooter, TableHeader, TableHead, TableRow, TableCaption.",
	"client/src/components/ui/tabs.tsx": "Shadcn Tabs component. Exports Tabs, TabsList, TabsTrigger, TabsContent.",
	"client/src/components/ui/textarea.tsx": "Shadcn Textarea component. Exports Textarea.",
	"client/src/components/ui/theme-provider.tsx": "Theme provider component for managing and applying theme settings in a React application using context and hooks.",
	"client/src/components/ui/theme-toggle.tsx": "Theme toggle component for switching between light and dark modes. Exports ThemeToggle.",
	"client/src/components/ui/toast.tsx": "Shadcn Toast component. Exports type ToastProps, type ToastActionElement, ToastProvider, ToastViewport, Toast, ToastTitle, ToastDescription, ToastClose, ToastAction.",
	"client/src/components/ui/toaster.tsx": "Shadcn Toaster component. Exports Toaster.",
	"client/src/components/ui/toggle-group.tsx": "Shadcn Toggle Group component. Exports ToggleGroup, ToggleGroupItem.",
	"client/src/components/ui/toggle.tsx": "Shadcn Toggle component. Exports Toggle, toggleVariants.",
	"client/src/components/ui/tooltip.tsx": "Shadcn Tooltip component. Exports Tooltip, TooltipTrigger, TooltipContent, TooltipProvider.",
	"client/src/contexts/AuthContext.tsx": "Context provider for user authentication state management. Exports AuthProvider, useAuth.",
	"client/src/hooks/useMobile.tsx": "Custom hook for detecting mobile viewport.",
	"client/src/hooks/useToast.ts": "Custom hook for managing toast notifications.",
	"client/src/index.css": "Global CSS configuration for Tailwind, defining color variables, dark mode styles, base layer settings, and a custom shake animation for the application.",
	"client/src/lib/utils.ts": "Utility functions for class name management.",
	"client/src/pages/Login.tsx": "Login page component with form validation, authentication logic, and responsive UI for user sign-in using react-hook-form and custom authentication context.",
	"client/src/pages/Register.tsx": "React component for user registration with form validation, authentication, and responsive UI using react-hook-form and shadcn components.",
	"client/src/main.tsx": "Application entry point with React root rendering.",
	"client/src/vite-env.d.ts": "TypeScript declarations for Vite environment.",
	"client/tsconfig.app.json": "TypeScript configuration for application code.",
	"client/tsconfig.json": "Main TypeScript configuration with project references.",
	"client/tsconfig.node.json": "TypeScript configuration for Node.js environment.",
	"client/vite.config.ts": "Vite build tool configuration with  server proxy configuration.",
	"client/tailwind.config.js": "Tailwind CSS configuration file with custom theme extensions, defining color palette, border radii, keyframe animations, and supporting dark mode with a comprehensive design system.",
	"server/.env": "This file is a configuration file in the form of a .env file. It contains environment variables used by the application, such as the port to listen on, the MongoDB database URL, and the session secret string.",
	"server/package.json": "Server configuration with dependencies, scripts, and metadata. [References: server.js]",
	"package.json": "Project configuration with dependencies, scripts, and metadata.",
	".gitignore": "Git configuration to exclude files and directories from version control.",
	"fileDescriptions.json": "File that contains descriptions for all the files in the project.",
	"client/src/api/disciplines.ts": "API function for retrieving discipline-class combinations for a logged-in professor, with mock data and commented-out actual API call implementation.",
	"client/src/api/grades.ts": "API utility functions for managing student grades, providing methods to retrieve, update, and save grade data for a specific discipline-class with mock and commented-out API call implementations.",
	"client/src/pages/GradeManagement.tsx": "React component for grade management, handling student grade data retrieval, editing, saving, and displaying class analytics with real-time updates and error handling.",
	"client/src/pages/ProfessorDashboard.tsx": "Professor dashboard page rendering discipline classes with loading states, fetching professor's assigned disciplines, and displaying discipline cards or empty state message.",
	"client/src/components/dashboard/DisciplineCard.tsx": "Reusable React component for displaying discipline class details with navigation to grades management, featuring an interactive card with discipline information and a manage grades button.",
	"client/src/components/dashboard/DisciplineCardSkeleton.tsx": "Skeleton component for discipline card, rendering placeholder loading state with animated Skeleton elements in a Card layout.",
	"client/src/components/grades/AnalyticsCard.tsx": "Reusable analytics card component for displaying key metrics with customizable title, value, icon, and optional subtitle, supporting dynamic styling and color variations.",
	"client/src/components/grades/ClassAnalytics.tsx": "React component for displaying comprehensive class performance analytics, rendering detailed grade statistics including class average, median, approval rates, and student performance metrics with color-coded visualizations.",
	"client/src/components/grades/GradeCell.tsx": "Reusable React component for displaying and editing grades with inline validation, save status indicators, and interactive input handling.",
	"client/src/components/grades/GradeTable.tsx": "Renders a comprehensive grade table for students, displaying academic performance across multiple bimesters with editable grade columns and responsive design.",
	"client/src/components/grades/GradeTableRow.tsx": "Renders a detailed grade table row for a student, displaying editable grade cells, status badges, and dynamically styled based on academic performance and recovery exam eligibility.",
	"client/src/components/grades/GradeTableSkeleton.tsx": "Skeleton component for grade table, rendering a loading state with placeholder skeletons for table headers and rows using Shadcn UI components.",
	"client/src/pages/BlankPage.tsx": "Placeholder React component for displaying a \"Page Under Construction\" message with a navigation button to return home, dynamically showing the current unimplemented route path.",
	"client/src/types/academic.ts": "TypeScript type definitions for academic entities, providing interfaces for students, discipline classes, grade data, and class performance analytics.",
	"client/src/utils/gradeCalculations.ts": "Grade calculation utility functions for academic performance, providing methods to compute student grades, class analytics, status determination, and grade validation.",
	"server/eslint.config.js": "ESLint configuration for TypeScript and JavaScript files, setting recommended rules, global environments, and custom linting preferences for the server project.",
	"server/server.ts": "Express server configuration with database connection, CORS setup, authentication and basic routes, and comprehensive error handling middleware.",
	"server/tsconfig.json": "TypeScript configuration file for server-side compilation, defining strict type checking, module resolution, and build output settings for Node.js environment.",
	"server/config/database.ts": "MongoDB connection utility that establishes and manages database connection with error handling, reconnection logic, and graceful shutdown mechanism.",
	"server/models/User.ts": "Mongoose User model defining schema with email, password, roles, and authentication-related fields, with password hash validation and JSON transformation to exclude sensitive data.",
	"server/models/init.ts": "Mongoose database initialization function for establishing a connection to MongoDB with configurable connection options and error handling.",
	"server/routes/authRoutes.ts": "Express router handling authentication routes with login, register, logout, token refresh, and user profile retrieval, implementing JWT-based authentication and user management.",
	"server/routes/index.ts": "Express router configuration handling root path and health check endpoints, providing welcome message and ping response.",
	"server/routes/middlewares/auth.ts": "Express middleware for JWT-based authentication and role-based access control, validating user tokens and enforcing role permissions for protected routes.",
	"server/services/llmService.ts": "LLM service module for sending requests to OpenAI and Anthropic, with retry mechanism and error handling for generating AI responses.",
	"server/services/userService.ts": "User service with CRUD operations for user management, providing methods for authentication, user creation, password handling, and database interactions using Mongoose.",
	"server/utils/auth.ts": "JWT token generation utility for user authentication, providing functions to create access and refresh tokens with configurable expiration periods.",
	"server/utils/password.ts": "Password utility functions for secure password hashing, validation, and format checking using bcrypt algorithm with methods to generate hash, compare passwords, and validate hash format.",
	"shared/eslint.config.js": "ESLint configuration for TypeScript and JavaScript projects, setting recommended rules, global settings, and custom linting preferences for the project.",
	"shared/index.ts": "Centralized export module for shared role configurations and user type definitions across the application.",
	"shared/package.json": "Package configuration for shared TypeScript module with build scripts, linting, and development utilities for a reusable library.",
	"shared/tsconfig.json": "TypeScript compiler configuration for shared library, setting strict type checking, module resolution, and build output options for TypeScript files.",
	"shared/config/roles.ts": "Role configuration module defining user role constants and type-safe role management utilities for application access control.",
	"shared/types/user.ts": "TypeScript type definition for User model, specifying structure and properties of user accounts in the application."
}